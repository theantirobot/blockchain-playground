  type Query {
    subscriptions(first: Int, after: String, filter: AddressSubscriptionFilter): AddressSubscriptionConnection
    subscription(id: ID!): AddressSubscription
  }

  type Mutation {
    subscribe(input: SubscribeInput!): AddressSubscription
    updateAddressSubscription(id: ID!, input: SubscribeInput!): AddressSubscription
    unsubscribe(id: ID!): Boolean
  }

  input SubscribeInput {
    address: String!
    webhookUrl: String!
    confirmationCount: Int!
  }

  type AddressSubscription @key(fields: "id") {
    id: ID!
    webhookUrl: String
    address: String
    confirmationCount: Int
    revisions(first: Int, after: String): AddressSubscriptionRevisionConnection
  }

  type AddressSubscriptionConnection {
    edges: [AddressSubscriptionEdge]
    pageInfo: PageInfo
  }

  type AddressSubscriptionEdge {
    node: AddressSubscription
    cursor: String!
  }

  type PageInfo {
    endCursor: String
    hasNextPage: Boolean!
  }

  type Block {
    id: ID!
  }

  input AddressSubscriptionFilter {
    addresses: [String]
 }

  type AddressSubscriptionRevisionConnection {
    edges: [AddressSubscriptionRevisionEdge]
    pageInfo: PageInfo
  }

  type AddressSubscriptionRevisionEdge {
    node: AddressSubscriptionRevision
    cursor: String!
  }

  type AddressSubscriptionRevision {
    id: ID!
    changeSummary: String!
    subscription: AddressSubscription!
  }